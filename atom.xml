<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Zhipeng Jiang</title>
  <subtitle>In Pursuit of Absolute Simplicity</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-02-26T16:31:42.000Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Zhipeng Jiang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/02/27/hello-world/"/>
    <id>http://yoursite.com/2016/02/27/hello-world/</id>
    <published>2016-02-26T16:31:42.000Z</published>
    <updated>2016-02-26T16:31:42.000Z</updated>
    
    <content type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo server&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Generate-static-files&quot;&gt;&lt;a href=&quot;#Generate-static-files&quot; class=&quot;headerlink&quot; title=&quot;Generate static files&quot;&gt;&lt;/a&gt;Generate static files&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo generate&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/generating.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Generating&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Deploy-to-remote-sites&quot;&gt;&lt;a href=&quot;#Deploy-to-remote-sites&quot; class=&quot;headerlink&quot; title=&quot;Deploy to remote sites&quot;&gt;&lt;/a&gt;Deploy to remote sites&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ hexo deploy&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/deployment.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Deployment&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>仁川机场过夜转机小纪</title>
    <link href="http://yoursite.com/2016/02/21/%E4%BB%81%E5%B7%9D%E6%9C%BA%E5%9C%BA%E8%BF%87%E5%A4%9C%E8%BD%AC%E6%9C%BA%E5%B0%8F%E7%BA%AA/"/>
    <id>http://yoursite.com/2016/02/21/仁川机场过夜转机小纪/</id>
    <published>2016-02-20T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;p&gt;1月27号开始出发，因为春节期间往返美国的机票实在贵出翔，所以买了韩亚航空的转机联程票，在仁川机场过夜转机。第一天下午6点多到仁川机场，第二天下午4点才出发，所以中间有将近22个小时。首先要担心的是睡觉的问题，在去之前也查了很多攻略，去之前心里也很忐忑，我这不爱看韩剧的程序员一句韩语都不会。到了之后就发现完全不用担心，仁川机场真的是什么都有。这里推荐一个网站，&lt;a href=&quot;http://www.sleepinginairports.net/asia/seoul.htm&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.sleepinginairports.net/asia/seoul.htm&lt;/a&gt;，里面介绍了在仁川机场过夜的各种设施服务。关于睡觉有很多种选择：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;在机场四楼有休息区（Rest Area），里面有电影区、躺椅、按摩椅、充电区域、洗澡区，寄包裹，全部免费。还有Sky Hub Lounge，对经济舱乘客开放，价格好像十几刀吧（商务舱和头等舱的乘客有单独的休息室，免费）。&lt;/li&gt;
&lt;li&gt;同样在机场四楼，有Transit Hotel，我没试过多少钱，网上查下来也就四五百人民币的样子。&lt;/li&gt;
&lt;li&gt;出机场找宾馆，这我没试过，但据说选择很多，应该也不是很难吧。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;为了节约钱我就直接在休息区的电影区的躺椅上睡了，说实话睡得很舒服，沙发椅可以让你完全躺下来，记得戴上眼罩跟耳塞，晚上如果有小孩儿可能会比较吵。我的去程那一晚就有一个中国小孩儿跑来跑去大喊大叫，旁边有个人忍不住说了两句，结果小孩儿的妈妈跟奶奶忍不住了，吼了两句，大意是我的孩子我自己管，最后还加了一句“神经病”，唉，现在这种素质的家长带孩子。。。&lt;/p&gt;
&lt;p&gt;第二天睡醒后，跟去之前查的攻略，准备参加免费的转机韩国旅游（Free Transit Tour），是的，你没听错，完全免费，包括导游、机场大巴。具体过程是到机场三楼找Information服务台，选好项目后会有人带你到二楼，填好出境表之后准备出境，没错，你可以获得72小时的出境签！前提是你拥有去美国等五个国家的签证，这个网上自己搜吧，资料挺多的。因为自己早上睡了个懒觉，没赶上早上的Program，所以就参加了一个10点到15点的项目，是去参观昌德宫和购物。一路上跟一位同去湾区的外国人聊得甚欢，总的来说这个Tour还是很有意思的！后来加了Whatsup之后才发现，人家是湾区某创业公司CEO，实在有眼不识泰山。&lt;/p&gt;
&lt;p&gt;Tour结束后回到机场，还是非常准时的，安检重新回到登记口之后就是一阵shopping，原谅我不爱韩剧，对化妆品也不懂，就买了点巧克力。仁川机场的免税店绝对是化妆品的天堂，各种牌子都有，而且折扣很厉害。免税店的售货员中文、日文、英语、法语都会讲，弄得我都特别不好意思。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;1月27号开始出发，因为春节期间往返美国的机票实在贵出翔，所以买了韩亚航空的转机联程票，在仁川机场过夜转机。第一天下午6点多到仁川机场，第二天下午4点才出发，所以中间有将近22个小时。首先要担心的是睡觉的问题，在去之前也查了很多攻略，去之前心里也很忐忑，我这不爱看韩剧的程序
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>First day @ Microsoft</title>
    <link href="http://yoursite.com/2016/01/07/First-day-Microsoft/"/>
    <id>http://yoursite.com/2016/01/07/First-day-Microsoft/</id>
    <published>2016-01-06T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;p&gt;Seriously, first day @ Microsoft, this is not a good sign, lol.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7sbqda.com1.z0.glb.clouddn.com/thumb_IMG_3836_1024.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Seriously, first day @ Microsoft, this is not a good sign, lol.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7sbqda.com1.z0.glb.clouddn.com/thumb_IMG_3836_102
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Install MySQL and Setup Remote Connection</title>
    <link href="http://yoursite.com/2015/12/10/Install-MySQL-and-Setup-Remote-Connection/"/>
    <id>http://yoursite.com/2015/12/10/Install-MySQL-and-Setup-Remote-Connection/</id>
    <published>2015-12-09T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Install-MySQl-in-Ubuntu-14-04&quot;&gt;&lt;a href=&quot;#Install-MySQl-in-Ubuntu-14-04&quot; class=&quot;headerlink&quot; title=&quot;Install MySQl in Ubuntu 14.04&quot;&gt;&lt;/a&gt;Install MySQl in Ubuntu 14.04&lt;/h2&gt;&lt;pre&gt;&lt;code&gt;apt-get install mysql-server
`&amp;lt;/pre&amp;gt;

During the installation, your server will ask you to select and confirm a password for the MySQL “root” user. This is an administrative account in MySQL that has increased privileges. Think of it as being similar to the root account for the server itself (the one you are configuring now is a MySQL-specific account however).

When the installation is complete, we need to run some additional commands to get our MySQL environment set up securely.

First, we need to tell MySQL to create its database directory structure where it will store its information. You can do this by typing:

&amp;lt;pre&amp;gt;`sudo mysql_install_db
`&amp;lt;/pre&amp;gt;

Afterwards, we want to run a simple security script that will remove some dangerous defaults and lock down access to our database system a little bit. Start the interactive script by running:

&amp;lt;pre&amp;gt;`sudo mysql_secure_installation
`&amp;lt;/pre&amp;gt;

You will be asked to enter the password you set for the MySQL root account. Next, it will ask you if you want to change that password. If you are happy with your current password, type “n” for “no” at the prompt.

For the rest of the questions, you should simply hit the “ENTER” key through each prompt to accept the default values. This will remove some sample users and databases, disable remote root logins, and load these new rules so that MySQL immediately respects the changes we have made.

At this point, your database system is now set up and we can move on.

## Check UFW and Netstat

Check if your mysql server is listening on a socket with netstat:

&amp;lt;pre&amp;gt;`netstat -tulpen
`&amp;lt;/pre&amp;gt;

and search for port number 3306\. If not or if only on localhost, check `/etc/mysql/my.cnf` and search the bind-address line and change it to:

&amp;lt;pre&amp;gt;`bind-address = 0.0.0.0
`&amp;lt;/pre&amp;gt;

Check your UFW configuration

&amp;lt;pre&amp;gt;`ufw status
`&amp;lt;/pre&amp;gt;

If your don’t have the port 3306, for example like this:

&amp;lt;pre&amp;gt;`Status: active

To                         Action      From
--                         ------      ----
22                         ALLOW       Anywhere
80/tcp                     ALLOW       Anywhere
3000/tcp                   ALLOW       Anywhere
22 (v6)                    ALLOW       Anywhere (v6)
80/tcp (v6)                ALLOW       Anywhere (v6)
3000/tcp (v6)              ALLOW       Anywhere (v6)
`&amp;lt;/pre&amp;gt;

Add 3306 to the list by typing

&amp;lt;pre&amp;gt;`ufw allow 3306/tcp
`&amp;lt;/pre&amp;gt;

Now check ufw again, you will find 3306 in that list.

## Grant Remote Access privileges

&amp;lt;pre&amp;gt;`GRANT ALL PRIVILEGES ON *.* TO &amp;apos;myuser&amp;apos;@&amp;apos;%&amp;apos;IDENTIFIED BY &amp;apos;mypassword&amp;apos; WITH GRANT OPTION;
FLUSH PRIVILEGES;
`&amp;lt;/pre&amp;gt;

Then restart mysql

&amp;lt;pre&amp;gt;`/etc/init.d/mysql restart
`&amp;lt;/pre&amp;gt;

## Test it

Now test your remote connection from another client

&amp;lt;pre&amp;gt;`mysql -h [ip] -u [username] -p
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Install-MySQl-in-Ubuntu-14-04&quot;&gt;&lt;a href=&quot;#Install-MySQl-in-Ubuntu-14-04&quot; class=&quot;headerlink&quot; title=&quot;Install MySQl in Ubuntu 14.04&quot;&gt;&lt;/a
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Apache Kafka - Log Aggregation</title>
    <link href="http://yoursite.com/2015/12/06/Apache-Kafka-Log-Aggregation/"/>
    <id>http://yoursite.com/2015/12/06/Apache-Kafka-Log-Aggregation/</id>
    <published>2015-12-05T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Environment&quot;&gt;&lt;a href=&quot;#Environment&quot; class=&quot;headerlink&quot; title=&quot;Environment&quot;&gt;&lt;/a&gt;Environment&lt;/h2&gt;&lt;table&gt;&lt;br&gt;  &lt;thead&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;      &lt;th&gt; &lt;/th&gt;&lt;br&gt;      &lt;th&gt;node1&lt;/th&gt;&lt;br&gt;      &lt;th&gt;node2&lt;/th&gt;&lt;br&gt;      &lt;th&gt;node3&lt;/th&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;  &lt;/thead&gt;&lt;br&gt;  &lt;tbody&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;      &lt;td&gt;&lt;strong&gt;Role&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;      &lt;td&gt;Server&lt;/td&gt;&lt;br&gt;      &lt;td&gt;Producer&lt;/td&gt;&lt;br&gt;      &lt;td&gt;Consumer&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;      &lt;td&gt;&lt;strong&gt;Mem&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;      &lt;td&gt;2048 MB&lt;/td&gt;&lt;br&gt;      &lt;td&gt;2048 MB&lt;/td&gt;&lt;br&gt;      &lt;td&gt;2048 MB&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;      &lt;td&gt;&lt;strong&gt;OS&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;      &lt;td&gt;Ubuntu 14.04 64&lt;/td&gt;&lt;br&gt;      &lt;td&gt;Ubuntu 14.04 64&lt;/td&gt;&lt;br&gt;      &lt;td&gt;Ubuntu 14.04 64&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;      &lt;td&gt;&lt;strong&gt;Public IP&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;      &lt;td&gt;121.40.83.134&lt;/td&gt;&lt;br&gt;      &lt;td&gt;-&lt;/td&gt;&lt;br&gt;      &lt;td&gt;-&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;      &lt;td&gt;&lt;strong&gt;Internal IP&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;      &lt;td&gt;192.168.6.18&lt;/td&gt;&lt;br&gt;      &lt;td&gt;192.168.6.15&lt;/td&gt;&lt;br&gt;      &lt;td&gt;192.168.6.16&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;  &lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;p&gt;Apache Kafka: &lt;a href=&quot;http://kafka.apache.org/downloads.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;kafka_2.11-0.8.2.2.tgz&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;Roles&quot;&gt;&lt;a href=&quot;#Roles&quot; class=&quot;headerlink&quot; title=&quot;Roles&quot;&gt;&lt;/a&gt;Roles&lt;/h2&gt;&lt;p&gt;&lt;img src=&quot;http://kafka.apache.org/images/producer_consumer.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;node1: Kafka cluster&lt;/li&gt;
&lt;li&gt;node2: Producer&lt;/li&gt;
&lt;li&gt;node3: Comsumer&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;Launch&quot;&gt;&lt;a href=&quot;#Launch&quot; class=&quot;headerlink&quot; title=&quot;Launch&quot;&gt;&lt;/a&gt;Launch&lt;/h2&gt;&lt;h3 id=&quot;Preparation&quot;&gt;&lt;a href=&quot;#Preparation&quot; class=&quot;headerlink&quot; title=&quot;Preparation&quot;&gt;&lt;/a&gt;Preparation&lt;/h3&gt;&lt;p&gt;Download kafka_2.11-0.8.2.2.tgz and extract to each node.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;scp kafka_2.11-0.8.2.2.tgz [user]@[node]:[path]
tar xvzf kafka_2.11-0.8.2.2.tgz
`&amp;lt;/pre&amp;gt;

### Start Kafka Server

**Note**

If you don’t have Zoopkeeper running in your cluster, don’t forget to lauch Zoopkeeper before starting Kafka server.

&amp;lt;pre&amp;gt;`# In the root directory of Kafka
./bin/zookeeper-server-start.sh config/zookeeper.properties
`&amp;lt;/pre&amp;gt;

Launch Kafka server in node1

&amp;lt;pre&amp;gt;`./bin/kafka-server-start.sh ./config/server.properties
`&amp;lt;/pre&amp;gt;

You can check the status of the default port for Kafka Server

&amp;lt;pre&amp;gt;`netstat -npl 9092
`&amp;lt;/pre&amp;gt;

### Setup Producer

I developed a simple log generator web service with Node.js, you can clone the repo for a quick demo.

&amp;lt;pre&amp;gt;`git clone https://github.com/HaohanStacks/haohan_data_producer.git generator &amp;amp;amp;&amp;amp;amp; cd generator
npm i &amp;amp;amp;&amp;amp;amp; npm start
`&amp;lt;/pre&amp;gt;

For more details about this repo, please check the document here: [https://github.com/HaohanStacks/haohan_data_producer](https://github.com/HaohanStacks/haohan_data_producer).

In node2, logs will be generated in `./generator/logs/access.log`. Now we need to send this log content to Kafka Server.

&amp;lt;pre&amp;gt;`tail -n 0 -f ../haohan_data_producer/logs/access.log | bin/kafka-console-producer.sh --broker-list 192.168.6.18:9092 --topic haohan
`&amp;lt;/pre&amp;gt;

Pay attention to the path of log file and binary files. `192.168.6.18` is node1’s ip address, `haohan` is the topic of this producer. Now we have pushed logs to Kafka Server.

### Setup Comsumer

In node3, go to the root directory of Kafka

&amp;lt;pre&amp;gt;`bin/kafka-console-consumer.sh --zookeeper 192.168.6.18:2181 --topic haohan --from-beginning
`&amp;lt;/pre&amp;gt;

`2181` is the default port for zookeeper, pay attention to the topic name, it should be the same as what you have named when you setup the producer in node2.

### Test

Open another terminal, send http request to your web service (This web service is launched by Node.js, the default port is 3000).

&amp;lt;pre&amp;gt;`curl 192.168.6.15:3000
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;And voilà, in node3 you will see the received log text. :D&lt;/p&gt;
&lt;!-- ## Requirements:

- gcc
- make

## Download

Download PostgreSQL from its official download page: [http://www.postgresql.org/download/](http://www.postgresql.org/download/).

## Compile and Install

## Run

```
postgres@node1:/usr/local/postgresql/bin$ ./pg_ctl start -D ../data/
./psql
``` --&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Environment&quot;&gt;&lt;a href=&quot;#Environment&quot; class=&quot;headerlink&quot; title=&quot;Environment&quot;&gt;&lt;/a&gt;Environment&lt;/h2&gt;&lt;table&gt;&lt;br&gt;  &lt;thead&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt; 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>胡言乱语6</title>
    <link href="http://yoursite.com/2015/11/07/%E8%83%A1%E8%A8%80%E4%B9%B1%E8%AF%AD6/"/>
    <id>http://yoursite.com/2015/11/07/胡言乱语6/</id>
    <published>2015-11-06T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;p&gt;2015是值得纪念的一年。&lt;/p&gt;
&lt;p&gt;一手好牌，就这么被我糟蹋了。&lt;/p&gt;
&lt;p&gt;回头看看，也挺好的，今年的大起大落，或许有些人一辈子都体会不到。2014年那么风调雨顺，窃以为15年可以更上一层楼，谁知还没爬多高，就一下子摔倒谷底了。&lt;/p&gt;
&lt;p&gt;现在当务之急就是赶紧准备面试，这下子真是破釜沉舟，没有了backup，没有了工作，即将从交大滚蛋。&lt;/p&gt;
&lt;p&gt;挺好的，经历了这些大起大落，再也不会像以前那样沉浸在痛苦中不能自拔。越早爬起来，损失就越小。抱怨再多也只是扯谈。&lt;/p&gt;
&lt;div style=&quot;font-family: fantasy;font-size: 20px;margin: 30px 0;&quot;&gt;C’est la vie!&lt;/div&gt;

&lt;hr&gt;
&lt;p&gt;2015-12-03 更新&lt;/p&gt;
&lt;p&gt;赶上最后一波招聘，拿到星环科技流式计算研发五级的offer，IBM养老院级的offer以及微软Azure Storage Team最后一个headcount的best offer。&lt;/p&gt;
&lt;p&gt;结果还不算太差，想想还是去微软吧。没日没夜地刷了一个月的leetcode，虽然面试的时候一道题目也没有遇到，但总的来说对于思维的锻炼还是很有帮助的。我觉得我应该会继续坚持把leetcode的那些题目做完吧。&lt;/p&gt;
&lt;p&gt;Farewell, Sutoiku, Inc. 谢谢你给我那份在硅谷实习的机会，并把我带进了前端开发的大门；也谢谢你在今年给我突如其来的不辞而别，让我认识到资本游戏的背后是多么赤裸裸的冷漠。我想，会有那么一天，我要给stoic寄一张明信片。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;2015是值得纪念的一年。&lt;/p&gt;
&lt;p&gt;一手好牌，就这么被我糟蹋了。&lt;/p&gt;
&lt;p&gt;回头看看，也挺好的，今年的大起大落，或许有些人一辈子都体会不到。2014年那么风调雨顺，窃以为15年可以更上一层楼，谁知还没爬多高，就一下子摔倒谷底了。&lt;/p&gt;
&lt;p&gt;现在当务之急就是赶紧
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>经典面试题汇总</title>
    <link href="http://yoursite.com/2015/11/05/%E7%BB%8F%E5%85%B8%E9%9D%A2%E8%AF%95%E9%A2%98%E6%B1%87%E6%80%BB/"/>
    <id>http://yoursite.com/2015/11/05/经典面试题汇总/</id>
    <published>2015-11-04T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;General&quot;&gt;&lt;a href=&quot;#General&quot; class=&quot;headerlink&quot; title=&quot;General&quot;&gt;&lt;/a&gt;General&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/sigh1988/article/details/9774845&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;我的美国CS面试经验分享&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Bit-manipulation&quot;&gt;&lt;a href=&quot;#Bit-manipulation&quot; class=&quot;headerlink&quot; title=&quot;Bit manipulation&quot;&gt;&lt;/a&gt;Bit manipulation&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/graphics/archive/2010/06/21/1752421.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;算法-求二进制数中1的个数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/single-number-iii/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Single Number III&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/single-number-ii/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Single Number II&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://leetcode.com/problems/single-number-i/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Single Number&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Sorting&quot;&gt;&lt;a href=&quot;#Sorting&quot; class=&quot;headerlink&quot; title=&quot;Sorting&quot;&gt;&lt;/a&gt;Sorting&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.nowcoder.com/discuss/1859?type=1&amp;amp;order=0&amp;amp;pos=15&amp;amp;page=1?from=wb&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;程序员必须掌握的8大排序算法（Java版）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://bubkoo.com/2014/01/14/sort-algorithm/heap-sort/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;常见排序算法 - 堆排序 (Heap Sort)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;JavaScript&quot;&gt;&lt;a href=&quot;#JavaScript&quot; class=&quot;headerlink&quot; title=&quot;JavaScript&quot;&gt;&lt;/a&gt;JavaScript&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_encapsulation.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Javascript 面向对象编程（一）：封装&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Javascript面向对象编程（二）：构造函数的继承&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.ruanyifeng.com/blog/2010/05/object-oriented_javascript_inheritance_continued.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Javascript面向对象编程（三）：非构造函数的继承&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Tree&quot;&gt;&lt;a href=&quot;#Tree&quot; class=&quot;headerlink&quot; title=&quot;Tree&quot;&gt;&lt;/a&gt;Tree&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://www.cnblogs.com/huangxincheng/archive/2012/11/25/2788268.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;6天通吃树结构—— 第五天 Trie树&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&quot;Math&quot;&gt;&lt;a href=&quot;#Math&quot; class=&quot;headerlink&quot; title=&quot;Math&quot;&gt;&lt;/a&gt;Math&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://stackoverflow.com/questions/3492302/easy-interview-question-got-harder-given-numbers-1-100-find-the-missing-numbe&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Given numbers 1..100, find the missing number(s)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;General&quot;&gt;&lt;a href=&quot;#General&quot; class=&quot;headerlink&quot; title=&quot;General&quot;&gt;&lt;/a&gt;General&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.csdn.net/sigh1988/artic
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Thoughts on open-source projects as a junior developer</title>
    <link href="http://yoursite.com/2015/10/20/Thoughts-on-open-source-projects-as-a-junior-developer/"/>
    <id>http://yoursite.com/2015/10/20/Thoughts-on-open-source-projects-as-a-junior-developer/</id>
    <published>2015-10-19T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;p&gt;Recently I got some spare time on my open-source project &lt;a href=&quot;https://github.com/zp-j/wiki-infobox-parser&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;wiki-infobox-parser&lt;/a&gt;, which is also available as a &lt;a href=&quot;https://www.npmjs.com/package/wiki-infobox-parser&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;npm&lt;/a&gt; package. Feel free to test it, tell me the issue and all PRs are welcomed.&lt;/p&gt;
&lt;p&gt;As a junior software developer it takes me about 5 hours to refactor the whole project, including modularizing functionalities, writing test cases and adding more documentations. The first version of the Wikipedia Infobox parser was written last year, at that time I was still a JavaScript beginner, I wrote this parser to learn how to program with asynchronous I/O. Coincidentally, when I was still in university my first big project (that means I have to draft requirement docs, write tests, develop an application, test and deploy) was also to write a wiki parser with its API.&lt;/p&gt;
&lt;p&gt;As described in &lt;a href=&quot;https://en.wikipedia.org/wiki/Help:Wiki_markup&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Wikipedia&lt;/a&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Wiki markup, also known as &lt;em&gt;wikitext&lt;/em&gt; or &lt;em&gt;wikicode&lt;/em&gt;, consists of the syntax and keywords used by the &lt;a href=&quot;https://en.wikipedia.org/wiki/MediaWiki&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MediaWiki&lt;/a&gt; software to format a page. To learn how to see this markup, and to save an edit, see: &lt;a href=&quot;https://en.wikipedia.org/wiki/Help:Editing&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Help:Editing&lt;/a&gt;. There is a short list of markup and tips at &lt;a href=&quot;https://en.wikipedia.org/wiki/Help:Cheatsheet&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Help:Cheatsheet&lt;/a&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;The cheatsheet is well explained and structured, it has 14 mains sections including &lt;a href=&quot;https://en.wikipedia.org/wiki/Help:Wiki_markup#Layout&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Layout&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Help:Wiki_markup#Format&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Format&lt;/a&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Help:Wiki_markup#Links_and_URLs&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Links and URLs&lt;/a&gt;, etc. This document is quite long but you definitely need to read it &lt;strong&gt;carefully&lt;/strong&gt;. There are many exceptions and the structure can be nested. Since I was not intended to write a fully functional parser for wikitext, I did not use traditional techniques like lexical analysis, parsing, syntax tree, etc. What I need is a light parser that can extract the text shown in wiki pages.&lt;/p&gt;
&lt;p&gt;After the refactoring, I started to think about something that I had never considered.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Test Driven Development&lt;/strong&gt;. Although we have learnt this term from school and we all know it is an important software development methodology. No matter you are going to add new features or modify existing implementations, you can not be 100% sure that what you have done is free of bugs or will not cause any regression issue. Pay attention, especially when other projects rely on your tool, you can not afford the expense to not only fail your own project but also crash others’ applications. Thanks to &lt;a href=&quot;https://github.com/EvanBoyle&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;EvanBoyle&lt;/a&gt; for his &lt;a href=&quot;https://github.com/zp-j/wiki-infobox-parser/issues/1&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;feedback&lt;/a&gt;, I do appreciate his feedbacks.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Development and Release&lt;/strong&gt;. When I was in the start-up &lt;a href=&quot;http://fenyin.me&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Fenyin&lt;/a&gt; or &lt;a href=&quot;http://sui.me&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Suimi&lt;/a&gt;, PMs always urge us to deploy the project no matter how much the product is accomplished. Sometimes it is lucky for a software developer if he/she can work with a PM, who has a little technique background. &lt;strong&gt;Do not publish the code that has no been fully tested&lt;/strong&gt;, as has been mentioned above, you should be responsible for your quality. &lt;strong&gt;Do not publish the code each time when a new feature is added&lt;/strong&gt;, sometimes what people want is a stable code with existing requirements. Of course you can give tags and let people to choose which version to use, but most time they just use the latest version &lt;code&gt;&amp;quot;wiki-infobox-parser&amp;quot;: &amp;quot;*&amp;quot;&lt;/code&gt;. Please make sure you have fully test your code and the new feature will not cause any regression problem.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;strong&gt;Pay attention to git commits&lt;/strong&gt;. The first version of wiki-infobox-parser was developed by a JavaScript newbie, so I mistakenly committed _node&lt;em&gt;modules&lt;/em&gt; with all dependencies :(. Though I found it, &lt;code&gt;git rm&lt;/code&gt; them and added them to &lt;code&gt;.gitignore&lt;/code&gt;, its &lt;em&gt;git log&lt;/em&gt; was growing to 8MB, seriously, all scripts only account for 12.2 KB! I had not notice that util yesterday when I was trying to install it from my other projects, it took me ~30 seconds to download the dependency. Awful job. Pay attention to your commits, try &lt;code&gt;git status&lt;/code&gt; and &lt;code&gt;git diff&lt;/code&gt; every time before you are going to commit. Of course there are many ways to make up for the mistake after it is been pushed, but without doubt you can always get benefits from a good habit.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;As a junior software developer, I still have a lot of stuff to learn. Thanks to the open-source community.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Recently I got some spare time on my open-source project &lt;a href=&quot;https://github.com/zp-j/wiki-infobox-parser&quot; target=&quot;_blank&quot; rel=&quot;exter
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Spark: zsh no matches found local</title>
    <link href="http://yoursite.com/2015/10/17/Spark-zsh-no-matches-found-local/"/>
    <id>http://yoursite.com/2015/10/17/Spark-zsh-no-matches-found-local/</id>
    <published>2015-10-16T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;Issue&quot;&gt;&lt;a href=&quot;#Issue&quot; class=&quot;headerlink&quot; title=&quot;Issue&quot;&gt;&lt;/a&gt;Issue&lt;/h2&gt;&lt;p&gt;When I was trying to submit a Spark streaming application with this script:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;$ ~/spark/bin/spark-submit \
--class &amp;quot;com.databricks.apps.logs.chapter1.LogAnalyzerStreaming&amp;quot; \
--master local[4] \
target/log-analyzer-1.0.jar \
apache.access.log
`&amp;lt;/pre&amp;gt;

I came across this error from zsh:

&amp;lt;pre&amp;gt;`$ zsh: no matches found: local[4]
`&amp;lt;/pre&amp;gt;

## Solution

I replaced `local[4]` with `local` it seemed to work, but according to the usage of [master URL](http://spark.apache.org/docs/latest/submitting-applications.html#master-urls):

&amp;lt;table&amp;gt;
  &amp;lt;tbody&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;local&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;run Spark locally with one worker thread (i.e. no parallelism at all)&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
    &amp;lt;tr&amp;gt;
      &amp;lt;td&amp;gt;local[K]&amp;lt;/td&amp;gt;
      &amp;lt;td&amp;gt;run Spark locally with K worker threads (ideally, set K to the number of cores on your machine)&amp;lt;/td&amp;gt;
    &amp;lt;/tr&amp;gt;
  &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;

I should not change the master URL because I wanted it to run in parallelism.

So I changed back to `bash` and run spark submit script again, interestingly it worked! Obviously it was an issue of `zsh`.

According this post [Zsh says “no matches found” when trying to download video with youtube-dl](http://superuser.com/questions/649635/zsh-says-no-matches-found-when-trying-to-download-video-with-youtube-dl), it said that zsh only accepts parameters by quoting them:

&amp;lt;pre&amp;gt;`$ ~/spark/bin/spark-submit \
--class &amp;quot;com.databricks.apps.logs.chapter1.LogAnalyzerStreaming&amp;quot; \
--master &amp;quot;local[4]&amp;quot; \
target/log-analyzer-1.0.jar \
apache.access.log
`&amp;lt;/pre&amp;gt;

It worked!

## Conclusion

In zsh, by default, a failed expansion is an error, but in Bash it isn’t: the failed pattern is just left as an argument exactly as it was written. zsh’s behaviour is safer, in that you can’t write a command that secretly doesn’t do what you meant because a file was missing, but you can change it to have the Bash behaviour if you want:

&amp;lt;pre&amp;gt;`setopt nonomatch
`&amp;lt;/pre&amp;gt;

This will resolve the original use case. In general it will be better to quote arguments with special characters, though, in order to avoid any mistakes where a file happens to exist with a corresponding name, or doesn’t exist when you thought it did.

The [NOMATCH option is on](http://zsh.sourceforge.net/Doc/Release/Options.html#index-NOMATCH) by default, and causes the errors I were seeing. If you disable it with `setopt nonomatch` then any failed glob expansions will be left intact on the command line, for example:

&amp;lt;pre&amp;gt;`$ echo foo?bar
zsh: no matches found: foo?bar
$ setopt nonomatch
$ echo foo?bar
foo?bar
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Issue&quot;&gt;&lt;a href=&quot;#Issue&quot; class=&quot;headerlink&quot; title=&quot;Issue&quot;&gt;&lt;/a&gt;Issue&lt;/h2&gt;&lt;p&gt;When I was trying to submit a Spark streaming application 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>SSH login without password</title>
    <link href="http://yoursite.com/2015/10/16/SSH-login-without-password/"/>
    <id>http://yoursite.com/2015/10/16/SSH-login-without-password/</id>
    <published>2015-10-15T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;p&gt;If you want to login from host_A (user a) to Host_B (user b), it is annoying to enter passwords everytime, because you want to call ssh from shell script.&lt;/p&gt;
&lt;p&gt;Ok it’s quite easy to do that:&lt;/p&gt;
&lt;h2 id=&quot;Generate-public-key&quot;&gt;&lt;a href=&quot;#Generate-public-key&quot; class=&quot;headerlink&quot; title=&quot;Generate public key&quot;&gt;&lt;/a&gt;Generate public key&lt;/h2&gt;&lt;p&gt;First in host_A you need to generate a pair of authentication keys;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;a@A:~&amp;amp;gt; ssh-keygen -t rsa
Generating public/private rsa key pair.
Enter file in which to save the key (/home/a/.ssh/id_rsa):
Enter passphrase (empty for no passphrase):
Enter same passphrase again:
Your identification has been saved in /home/a/.ssh/id_rsa.
Your public key has been saved in /home/a/.ssh/id_rsa.pub.
The key fingerprint is:
40:55:82:6b:a4:93:d7:6c:8d:5b:36:6c:b8:ac:80:44 name@domain.com
The key&amp;apos;s randomart image is:
+--[ RSA 4096]----+
|      .oo..      |
|  E  .o  .       |
| .   +.+ =       |
|  . + +.* B      |
| . . + oS* .     |
|  . .   +        |
|     . .         |
|      .          |
|                 |
+-----------------+
`&amp;lt;/pre&amp;gt;

## Create .ssh directory in host_B

Create a directory ~/.ssh as user b on host_B. (The directory may already exist, which is fine):

&amp;lt;pre&amp;gt;`a@A:~&amp;amp;gt; ssh b@B mkdir -p .ssh
b@B&amp;apos;s password:
`&amp;lt;/pre&amp;gt;

## Append a’s public key to b

Append a’s new public key to b@B:.ssh/authorized_keys and enter b’s password one last time:

&amp;lt;pre&amp;gt;`a@A:~&amp;amp;gt; cat .ssh/id_rsa.pub | ssh b@B &amp;apos;cat &amp;amp;gt;&amp;amp;gt; .ssh/authorized_keys&amp;apos;
b@B&amp;apos;s password:
`&amp;lt;/pre&amp;gt;

Voilà, from now on you can log into B as b from A as a without password:

&amp;lt;pre&amp;gt;`a@A:~&amp;amp;gt; ssh b@B
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;If you want to login from host_A (user a) to Host_B (user b), it is annoying to enter passwords everytime, because you want to call ssh f
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Compile QuantLib in El Capitan</title>
    <link href="http://yoursite.com/2015/10/15/Compile-QuantLib-in-El-Capitan/"/>
    <id>http://yoursite.com/2015/10/15/Compile-QuantLib-in-El-Capitan/</id>
    <published>2015-10-14T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;h1 id=&quot;Background&quot;&gt;&lt;a href=&quot;#Background&quot; class=&quot;headerlink&quot; title=&quot;Background&quot;&gt;&lt;/a&gt;Background&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://quantlib.org/index.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;QuantLib&lt;/a&gt; is aimed at providing a comprehensive software framework for quantitative finance. QuantLib is a free/open-source library for modeling, trading, and risk management in real-life[1].&lt;/p&gt;
&lt;h1 id=&quot;Compile&quot;&gt;&lt;a href=&quot;#Compile&quot; class=&quot;headerlink&quot; title=&quot;Compile&quot;&gt;&lt;/a&gt;Compile&lt;/h1&gt;&lt;p&gt;You can find the &lt;a href=&quot;http://quantlib.org/install/macosx.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;doc&lt;/a&gt; about how to install QuantLib, but if you have upgraded to El Capitan you might come cross the same issue I had.&lt;/p&gt;
&lt;p&gt;It is required to install boost before quantlib installation:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo port install boost
`&amp;lt;/pre&amp;gt;

If unluckily you don’t have port installed, you can easily find the official sites of [MacPorts](https://www.macports.org/). As suggested in its home page, you are probably gonna download the **pkg** installers for El Capitan. Double click, some continue, and bah! It seemed that installation was suspended or blocked by something bizarre, you even didn’t know where to find the problem. For the first time I killed the installation and tried it again. When I came back from kitchen it after ~20 mins, it was done.

Now if you try the run the script indicated in the doc:

&amp;lt;pre&amp;gt;`sudo port install boost
`&amp;lt;/pre&amp;gt;

Bah, you got another error, `command not found: port`. :(

I thought it was the issue that system variable `$PATH` has not include MacPorts, I modified `/etc/paths` and tried to `source` it, but it gave the error that it was not allowed to do that.

I have spent too much time on MacPorts and I was about to give up, why I can’t install boost directly without using port? Actually the command below did work!

&amp;lt;pre&amp;gt;`brew install boost
`&amp;lt;/pre&amp;gt;

After several minutes for downloading and installing, boost was installed and configured under `/usr/local/Cellar/boost`, clean and clear.

Next, just follow the instructions in QuantLib:

&amp;lt;pre&amp;gt;`tar xzvf QuantLib-1.0.1.tar.gz
cd QuantLib-1.0.1
./configure --enable-static --with-boost-include=/usr/local/Cellar/boost/1.58.0/include/ --with-boost-lib=/usr/local/Cellar/boost/1.58.0/lib/ --prefix=/usr/local/Cellar/boost/1.58.0/
make &amp;amp;amp;&amp;amp;amp; sudo make install
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;Pay attention to the boost path, it would take some time to for &lt;code&gt;make&lt;/code&gt; and &lt;code&gt;make install&lt;/code&gt;.&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;[1] QuantLib, &lt;a href=&quot;http://quantlib.org/index.shtml&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://quantlib.org/index.shtml&lt;/a&gt;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Background&quot;&gt;&lt;a href=&quot;#Background&quot; class=&quot;headerlink&quot; title=&quot;Background&quot;&gt;&lt;/a&gt;Background&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;http://quantlib.org/index.sht
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Trigger keyboard events in js</title>
    <link href="http://yoursite.com/2015/10/13/Trigger-keyboard-events-in-js/"/>
    <id>http://yoursite.com/2015/10/13/Trigger-keyboard-events-in-js/</id>
    <published>2015-10-12T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;Only tested in Chrome, I’m not certain you can use it in other browers.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This tutorial will tell you how to simulate keyboard event from the console of a browser.&lt;/p&gt;
&lt;h2 id=&quot;Create-events&quot;&gt;&lt;a href=&quot;#Create-events&quot; class=&quot;headerlink&quot; title=&quot;Create events&quot;&gt;&lt;/a&gt;Create events&lt;/h2&gt;&lt;p&gt;It’s not difficult to trigger keyboard event in js, here is a sample code:&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/zp-j/b1ba8b420b4c5a07d5bd.js&quot;&gt;&lt;/script&gt;

&lt;h2 id=&quot;Keyboard-mapping&quot;&gt;&lt;a href=&quot;#Keyboard-mapping&quot; class=&quot;headerlink&quot; title=&quot;Keyboard mapping&quot;&gt;&lt;/a&gt;Keyboard mapping&lt;/h2&gt;&lt;p&gt;You can find the keyboard mapping table here: &lt;a href=&quot;http://www.cambiaresearch.com/articles/15/javascript-char-codes-key-codes&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Javascript Char Codes (Key Codes)&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;How-to-use-it&quot;&gt;&lt;a href=&quot;#How-to-use-it&quot; class=&quot;headerlink&quot; title=&quot;How to use it&quot;&gt;&lt;/a&gt;How to use it&lt;/h2&gt;&lt;p&gt;For example if you want to trigger &lt;code&gt;Q&lt;/code&gt;, &lt;code&gt;S&lt;/code&gt;, &lt;code&gt;P&lt;/code&gt;, &lt;code&gt;L&lt;/code&gt; in js, probably you are gonna need this piece of code:&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/zp-j/f2348b932ef1f47e45a5.js&quot;&gt;&lt;/script&gt;

&lt;p&gt;If you don’t know how to run js script in the console of a browser, check this: &lt;a href=&quot;http://www.wickedlysmart.com/hfjsconsole/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Using the browser console&lt;/a&gt;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;Only tested in Chrome, I’m not certain you can use it in other browers.&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This tutorial will tell you how to simula
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ES6 best practice from Airbnb</title>
    <link href="http://yoursite.com/2015/10/13/ES6-best-practice-from-Airbnb/"/>
    <id>http://yoursite.com/2015/10/13/ES6-best-practice-from-Airbnb/</id>
    <published>2015-10-12T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;p&gt;I would highly suggest the ES6 best practice from Airbnb:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/airbnb/javascript&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/airbnb/javascript&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;Some-notes&quot;&gt;&lt;a href=&quot;#Some-notes&quot; class=&quot;headerlink&quot; title=&quot;Some notes&quot;&gt;&lt;/a&gt;Some notes&lt;/h2&gt;&lt;h3 id=&quot;Comparison-Operators-amp-Equality&quot;&gt;&lt;a href=&quot;#Comparison-Operators-amp-Equality&quot; class=&quot;headerlink&quot; title=&quot;Comparison Operators &amp;amp; Equality&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/airbnb/javascript#comparison-operators--equality&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Comparison Operators &amp;amp; Equality&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Conditional statements such as the &lt;code&gt;if&lt;/code&gt; statement evaluate their expression using coercion with the &lt;code&gt;ToBoolean&lt;/code&gt; abstract method and always follow these simple rules:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Objects&lt;/strong&gt; evaluate to &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Undefined&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Null&lt;/strong&gt; evaluates to &lt;strong&gt;false&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Booleans&lt;/strong&gt; evaluate to &lt;strong&gt;the value of the boolean&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Numbers&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if &lt;strong&gt;+0, -0, or NaN&lt;/strong&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Strings&lt;/strong&gt; evaluate to &lt;strong&gt;false&lt;/strong&gt; if an empty string &lt;code&gt;&amp;#39;&amp;#39;&lt;/code&gt;, otherwise &lt;strong&gt;true&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For more information see &lt;a href=&quot;http://javascriptweblog.wordpress.com/2011/02/07/truth-equality-and-javascript/#more-2108&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Truth Equality and JavaScript&lt;/a&gt; by Angus Croll.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;if ([0]) {
  // true
  // An array is an object, objects evaluate to true
}
`&amp;lt;/pre&amp;gt;

### [Commas](https://github.com/airbnb/javascript#commas)

Additional trailing comma: **Yup.**

&amp;gt; Why? This leads to cleaner git diffs. Also, transpilers like Babel will remove the additional trailing comma in the transpiled code which means you don’t have to worry about the [trailing comma problem](https://github.com/airbnb/javascript/blob/master/es5/README.md#commas) in legacy browsers.

&amp;lt;pre&amp;gt;`// bad - git diff without trailing comma
const hero = {
     firstName: &amp;apos;Florence&amp;apos;,
-    lastName: &amp;apos;Nightingale&amp;apos;
+    lastName: &amp;apos;Nightingale&amp;apos;,
+    inventorOf: [&amp;apos;coxcomb graph&amp;apos;, &amp;apos;modern nursing&amp;apos;]
};

// good - git diff with trailing comma
const hero = {
     firstName: &amp;apos;Florence&amp;apos;,
     lastName: &amp;apos;Nightingale&amp;apos;,
+    inventorOf: [&amp;apos;coxcomb chart&amp;apos;, &amp;apos;modern nursing&amp;apos;],
};

// bad
const hero = {
  firstName: &amp;apos;Dana&amp;apos;,
  lastName: &amp;apos;Scully&amp;apos;
};

const heroes = [
  &amp;apos;Batman&amp;apos;,
  &amp;apos;Superman&amp;apos;
];

// good
const hero = {
  firstName: &amp;apos;Dana&amp;apos;,
  lastName: &amp;apos;Scully&amp;apos;,
};

const heroes = [
  &amp;apos;Batman&amp;apos;,
  &amp;apos;Superman&amp;apos;,
];
`&amp;lt;/pre&amp;gt;

### [Type Casting &amp;amp;amp; Coercion](https://github.com/airbnb/javascript#type-casting--coercion)

Strings:

&amp;lt;pre&amp;gt;`//  =&amp;amp;gt; this.reviewScore = 9;

// bad
const totalScore = this.reviewScore + &amp;apos;&amp;apos;;

// good
const totalScore = String(this.reviewScore);
`&amp;lt;/pre&amp;gt;

Numbers: Use Number for type casting and parseInt always with a radix for parsing strings.

&amp;lt;pre&amp;gt;`const inputValue = &amp;apos;4&amp;apos;;

// bad
const val = new Number(inputValue);

// bad
const val = +inputValue;

// bad
const val = inputValue &amp;amp;gt;&amp;amp;gt; 0;

// bad
const val = parseInt(inputValue);

// good
const val = Number(inputValue);

// good
const val = parseInt(inputValue, 10);
`&amp;lt;/pre&amp;gt;

### [Naming Conventions](https://github.com/airbnb/javascript#naming-conventions)

Use a leading underscore `_` when naming private properties.

&amp;lt;pre&amp;gt;`// bad
this.__firstName__ = &amp;apos;Panda&amp;apos;;
this.firstName_ = &amp;apos;Panda&amp;apos;;

// good
this._firstName = &amp;apos;Panda&amp;apos;;
&lt;/code&gt;&lt;/pre&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;I would highly suggest the ES6 best practice from Airbnb:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/airbnb/javascript&quot; target=&quot;_blank&quot; rel=&quot;exte
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>JavaScript tricks for Marc Dorcel</title>
    <link href="http://yoursite.com/2015/10/13/JavaScript-tricks-for-Marc-Dorcel/"/>
    <id>http://yoursite.com/2015/10/13/JavaScript-tricks-for-Marc-Dorcel/</id>
    <published>2015-10-12T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;p&gt;The trick itself is trivial, it’s a common issue that bothers every front-end developer. I use its jQuery to get the player object, then force the player to play by using its &lt;code&gt;play()&lt;/code&gt; API.&lt;/p&gt;
&lt;p&gt;Paste this code in your chrome console.&lt;/p&gt;
&lt;script src=&quot;https://gist.github.com/zp-j/2b6d741093cbc68faef9.js&quot;&gt;&lt;/script&gt;

&lt;script async src=&quot;//pagead2.googlesyndication.com/pagead/js/adsbygoogle.js&quot;&gt;&lt;/script&gt;

&lt;!-- Blog Ads --&gt;
&lt;p&gt;&lt;ins class=&quot;adsbygoogle&quot; style=&quot;display:block&quot; data-ad-client=&quot;ca-pub-3843524064868692&quot; data-ad-slot=&quot;2224116368&quot; data-ad-format=&quot;auto&quot;&gt;&lt;/ins&gt;&lt;/p&gt;
&lt;script&gt;
(adsbygoogle = window.adsbygoogle || []).push({});
&lt;/script&gt;

&lt;hr&gt;
&lt;h3 id=&quot;Note&quot;&gt;&lt;a href=&quot;#Note&quot; class=&quot;headerlink&quot; title=&quot;Note&quot;&gt;&lt;/a&gt;Note&lt;/h3&gt;&lt;p&gt;I’ve sent emails to the VP of Marc Dorcel, but he told me that it is not that serious, in a few weeks they are gonna shutdown that website, so here I will show you how to make use of this js script.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7sbqda.com1.z0.glb.clouddn.com/Screen%20Shot%202015-11-26%20at%2017.51.42.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;The trick itself is trivial, it’s a common issue that bothers every front-end developer. I use its jQuery to get the player object, then 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Config notes for El Capitan</title>
    <link href="http://yoursite.com/2015/09/30/Config-notes-for-El-Capitan/"/>
    <id>http://yoursite.com/2015/09/30/Config-notes-for-El-Capitan/</id>
    <published>2015-09-29T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;p&gt;The new release of OS X, El Capitan, brought several new features, one of them is called &lt;strong&gt;rootless&lt;/strong&gt;, which sets more limits for users. For example, some system directories are no longer allowed to modified even for root user.&lt;/p&gt;
&lt;p&gt;However, according to this post, &lt;a href=&quot;https://forums.developer.apple.com/thread/3981&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Disabling System Integrity Protection&lt;/a&gt;, you can temporarily disable &lt;strong&gt;rootless&lt;/strong&gt; with a restart. For detail steps please check the post above.&lt;/p&gt;
&lt;p&gt;In the same time, &lt;code&gt;gem install&lt;/code&gt; no longer works with rootless policy, since &lt;code&gt;gem&lt;/code&gt; needs the I/O right for /Library. In this post, &lt;a href=&quot;http://stackoverflow.com/questions/31972968/cant-install-gems-on-macos-x-el-capitan&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Can’t install gems on MacOS X “El Capitan”&lt;/a&gt;, two solutions are raised:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Keep using sudo and relocate binary file to &lt;code&gt;/usr/local/bin&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Install in your home directory without sudo&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Personally I’d suggest the second choice, &lt;code&gt;sudo&lt;/code&gt; always troubles me when I’m not certain what it will do and what it has done to me.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;The new release of OS X, El Capitan, brought several new features, one of them is called &lt;strong&gt;rootless&lt;/strong&gt;, which sets more limit
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Transfer from Flume to Kafka</title>
    <link href="http://yoursite.com/2015/09/28/Transfer-from-Flume-to-Kafka/"/>
    <id>http://yoursite.com/2015/09/28/Transfer-from-Flume-to-Kafka/</id>
    <published>2015-09-27T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;p&gt;After some research, I decide to transfer my log service from &lt;a href=&quot;https://flume.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flume&lt;/a&gt; to &lt;a href=&quot;http://kafka.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Kafka&lt;/a&gt;.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;After some research, I decide to transfer my log service from &lt;a href=&quot;https://flume.apache.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Flume&lt;/a
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Log big data analytics</title>
    <link href="http://yoursite.com/2015/08/11/Log-big-data-analytics/"/>
    <id>http://yoursite.com/2015/08/11/Log-big-data-analytics/</id>
    <published>2015-08-10T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;p&gt;This is my new project, log big data analytics.&lt;/p&gt;
&lt;p&gt;Once your startup earns thousands of users, you should pay attention to your server, most of its space is occupied by logs, Wchich can lead to server crash if there’s no more space for new logs.&lt;/p&gt;
&lt;p&gt;We all know that logs are important to both technical development and product management. We focus on the latter, where big data analysis methods can be applied.&lt;/p&gt;
&lt;p&gt;I draft the first version architecture for log analysis. There are six units (services) in this system.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Log producer service&lt;/li&gt;
&lt;li&gt;Message queue service&lt;/li&gt;
&lt;li&gt;ETL and indexing service&lt;/li&gt;
&lt;li&gt;Storage service&lt;/li&gt;
&lt;li&gt;Web service&lt;/li&gt;
&lt;li&gt;Visualization service&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://7sbqda.com1.z0.glb.clouddn.com/FullSizeRender.jpg&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Log producer service&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Logs can be generated by Apache or Nginx, we not only accept default format of HTTP logs, but also customized logs format.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Message queue service&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;We use &lt;strong&gt;flume&lt;/strong&gt; to acquire new logs, it is a distributed, reliable, and available service for efficiently collecting, aggregating, and moving large amounts of log data.&lt;/p&gt;
&lt;p&gt;The output of flume will be sent to &lt;strong&gt;Kafka&lt;/strong&gt;, a distributed, partitioned, replicated commit log service. It provides the functionality of a messaging system, but with a unique design.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ETL and indexing service&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It depends on the data structure of logs, we should be able to reconstruct data so as to maximize the time and space efficience.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Storage service&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;For the time bing we are considering to use Aliyun, so OTS and OSS are the options for massive data storage.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Web service&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Beyond the data we need to create a web service, providing RestAPI for data visualization.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Visualization service&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;This is really important.&lt;/p&gt;
&lt;p&gt;This is what we are going offer to our clients. We will provide an RIA (Rich Internet Application) for users to get what they want.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;This is my new project, log big data analytics.&lt;/p&gt;
&lt;p&gt;Once your startup earns thousands of users, you should pay attention to your serve
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Configuration memo</title>
    <link href="http://yoursite.com/2015/08/08/Configuration-memo/"/>
    <id>http://yoursite.com/2015/08/08/Configuration-memo/</id>
    <published>2015-08-07T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;p&gt;We have two testing servers, here are the detailed informations:&lt;/p&gt;
&lt;table&gt;&lt;br&gt;  &lt;thead&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;      &lt;th&gt; &lt;/th&gt;&lt;br&gt;      &lt;th&gt;iZ2309vbc18Z&lt;/th&gt;&lt;br&gt;      &lt;th&gt;iZ23tayrurgZ&lt;/th&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;  &lt;/thead&gt;&lt;br&gt;  &lt;tbody&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;      &lt;td&gt;&lt;strong&gt;CPU&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;      &lt;td&gt;1 core&lt;/td&gt;&lt;br&gt;      &lt;td&gt;1 core&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;      &lt;td&gt;&lt;strong&gt;Mem&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;      &lt;td&gt;1024 MB&lt;/td&gt;&lt;br&gt;      &lt;td&gt;1024 MB&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;      &lt;td&gt;&lt;strong&gt;OS&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;      &lt;td&gt;Ubuntu 14.04 64&lt;/td&gt;&lt;br&gt;      &lt;td&gt;Ubuntu 14.04 64&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;      &lt;td&gt;&lt;strong&gt;Public IP&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;      &lt;td&gt;121.40.83.134&lt;/td&gt;&lt;br&gt;      &lt;td&gt;121.41.12.184&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;      &lt;td&gt;&lt;strong&gt;Internal IP&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;      &lt;td&gt;10.171.221.141&lt;/td&gt;&lt;br&gt;      &lt;td&gt;10.173.142.47&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;      &lt;td&gt;&lt;strong&gt;Bandwidth&lt;/strong&gt;&lt;/td&gt;&lt;br&gt;      &lt;td&gt;1Mbps&lt;/td&gt;&lt;br&gt;      &lt;td&gt;1Mbps&lt;/td&gt;&lt;br&gt;    &lt;/tr&gt;&lt;br&gt;  &lt;/tbody&gt;&lt;br&gt;&lt;/table&gt;

&lt;h2 id=&quot;Install-Flume&quot;&gt;&lt;a href=&quot;#Install-Flume&quot; class=&quot;headerlink&quot; title=&quot;Install Flume&quot;&gt;&lt;/a&gt;Install Flume&lt;/h2&gt;&lt;p&gt;More details can be found from &lt;a href=&quot;https://flume.apache.org/FlumeUserGuide.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;official user guide&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Data flow model of Flume:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://flume.apache.org/_images/UserGuide_image00.png&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;wget http://cloud.github.com/downloads/cloudera/flume/flume-distribution-1.6.0-bin.tar.gz
tar -xzvf flume-distribution-1.6.0-bin.tar.gz
cp -rf flume-distribution-1.6.0-bin /root/local/flume
vi /etc/profile
export FLUME_HOME=/root/local/flume
export PATH=.:$PATH::$FLUME_HOME/bin
source /etc/profile
`&amp;lt;/pre&amp;gt;

Set role

&amp;lt;pre&amp;gt;`# example.conf: A single-node Flume configuration

# Name the components on this agent
a1.sources = r1
a1.sinks = k1
a1.channels = c1

# Describe/configure the source
a1.sources.r1.type = netcat
a1.sources.r1.bind = localhost
a1.sources.r1.port = 44444

# Describe the sink
a1.sinks.k1.type = logger

# Use a channel which buffers events in memory
a1.channels.c1.type = memory
a1.channels.c1.capacity = 1000
a1.channels.c1.transactionCapacity = 100

# Bind the source and sink to the channel
a1.sources.r1.channels = c1
a1.sinks.k1.channel = c1
`&amp;lt;/pre&amp;gt;

Test, in the root directory, run

&amp;lt;pre&amp;gt;`flume-ng agent --conf conf --conf-file ./conf/example.conf --name a1 -Dflume.root.logger=INFO,console
`&amp;lt;/pre&amp;gt;

In another terminal

&amp;lt;pre&amp;gt;`telnet localhost 44444

Trying 127.0.0.1...
Connected to localhost.localdomain (127.0.0.1).
Escape character is &amp;apos;^]&amp;apos;.
Hello world! &amp;amp;lt;ENTER&amp;amp;gt;
OK
`&amp;lt;/pre&amp;gt;

The original Flume terminal will output the event in a log message.

&amp;lt;pre&amp;gt;`12/06/19 15:32:19 INFO source.NetcatSource: Source starting
12/06/19 15:32:19 INFO source.NetcatSource: Created serverSocket:sun.nio.ch.ServerSocketChannelImpl[/127.0.0.1:44444]
12/06/19 15:32:34 INFO sink.LoggerSink: Event: { headers:{} body: 48 65 6C 6C 6F 20 77 6F 72 6C 64 21 0D          Hello world!. }
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&quot;Install-Spark&quot;&gt;&lt;a href=&quot;#Install-Spark&quot; class=&quot;headerlink&quot; title=&quot;Install Spark&quot;&gt;&lt;/a&gt;Install Spark&lt;/h2&gt;&lt;h3 id=&quot;Download-Pre-built-Spark&quot;&gt;&lt;a href=&quot;#Download-Pre-built-Spark&quot; class=&quot;headerlink&quot; title=&quot;Download Pre-built Spark&quot;&gt;&lt;/a&gt;Download Pre-built Spark&lt;/h3&gt;&lt;h3 id=&quot;Install-Java&quot;&gt;&lt;a href=&quot;#Install-Java&quot; class=&quot;headerlink&quot; title=&quot;Install Java&quot;&gt;&lt;/a&gt;Install Java&lt;/h3&gt;&lt;p&gt;Please refer to the document of DigitalOcean:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://www.digitalocean.com/community/tutorials/how-to-install-java-on-ubuntu-with-apt-get&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;How To Install Java on Ubuntu with Apt-Get&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Configure-SSH&quot;&gt;&lt;a href=&quot;#Configure-SSH&quot; class=&quot;headerlink&quot; title=&quot;Configure SSH&quot;&gt;&lt;/a&gt;Configure SSH&lt;/h3&gt;&lt;h3 id=&quot;Edit-hosts-file&quot;&gt;&lt;a href=&quot;#Edit-hosts-file&quot; class=&quot;headerlink&quot; title=&quot;Edit hosts file&quot;&gt;&lt;/a&gt;Edit hosts file&lt;/h3&gt;&lt;h3 id=&quot;Start-service&quot;&gt;&lt;a href=&quot;#Start-service&quot; class=&quot;headerlink&quot; title=&quot;Start service&quot;&gt;&lt;/a&gt;Start service&lt;/h3&gt;</content>
    
    <summary type="html">
    
      &lt;p&gt;We have two testing servers, here are the detailed informations:&lt;/p&gt;
&lt;table&gt;&lt;br&gt;  &lt;thead&gt;&lt;br&gt;    &lt;tr&gt;&lt;br&gt;      &lt;th&gt; &lt;/th&gt;&lt;br&gt;      &lt;th&gt;iZ
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Awesome wolframe function: CountryData</title>
    <link href="http://yoursite.com/2015/05/09/Awesome-wolframe-function-CountryData/"/>
    <id>http://yoursite.com/2015/05/09/Awesome-wolframe-function-CountryData/</id>
    <published>2015-05-08T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;p&gt;Do you really know how cool the wolframe is? Check this out:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;CountryData&lt;/em&gt;[“tag”,”property”]&lt;/p&gt;
&lt;p&gt;gives the value of the specified property for the country, country-like entity, or group of countries specified by .&lt;/p&gt;
&lt;p&gt;&lt;em&gt;CountryData&lt;/em&gt;[“tag”,{property,…,dates}]&lt;/p&gt;
&lt;p&gt;gives time series for certain economic and other properties.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Find the population of France:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In[1]:= &lt;img src=&quot;http://reference.wolfram.com/language/ref/Files/CountryData.en/I_2.gif&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;Out[1]: &lt;img src=&quot;http://reference.wolfram.com/language/ref/Files/CountryData.en/O_1.gif&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Find the members of the G8:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In[1]:= &lt;img src=&quot;http://reference.wolfram.com/language/ref/Files/CountryData.en/I_4.gif&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;Out[1]: &lt;img src=&quot;http://reference.wolfram.com/language/ref/Files/CountryData.en/O_2.gif&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Basic iconic shape of France:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In[1]:= &lt;img src=&quot;http://reference.wolfram.com/language/ref/Files/CountryData.en/I_16.gif&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;Out[1]: &lt;img src=&quot;http://reference.wolfram.com/language/ref/Files/CountryData.en/O_8.gif&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;&lt;strong&gt;Generate a world map using a Mollweide projection:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;In[1]:= &lt;img src=&quot;http://reference.wolfram.com/language/ref/Files/CountryData.en/I_18.gif&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;p&gt;Out[1]: &lt;img src=&quot;http://reference.wolfram.com/language/ref/Files/CountryData.en/O_9.gif&quot; alt=&quot;img&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;More documentations please refer to the official online doc: &lt;a href=&quot;http://reference.wolfram.com/language/ref/CountryData.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://reference.wolfram.com/language/ref/CountryData.html&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;Do you really know how cool the wolframe is? Check this out:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;CountryData&lt;/em&gt;[“tag”,”property”]&lt;/p&gt;
&lt;p&gt;gives the 
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Built-in Package Capture inside Chrome</title>
    <link href="http://yoursite.com/2015/05/05/Built-in-Package-Capture-inside-Chrome/"/>
    <id>http://yoursite.com/2015/05/05/Built-in-Package-Capture-inside-Chrome/</id>
    <published>2015-05-04T16:00:00.000Z</published>
    <updated>2016-02-26T16:42:58.000Z</updated>
    
    <content type="html">&lt;p&gt;This is a light weight tool built inside chrome, type&lt;/p&gt;
&lt;p&gt;&lt;code&gt;chrome://net-internals/#export&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;in the browser, you can find the following UI:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7sbqda.com1.z0.glb.clouddn.com/搜狗截图20150506152010.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;Now you can do whatever you can from the browser, this tool will capture all the packages, just like Wireshark.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7sbqda.com1.z0.glb.clouddn.com/搜狗截图20150506152419.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Well I have to admit Wireshark if much more powerful for its awesome filter, but sometimes if you are really urgent and you just need a simple capture, this is a good option.&lt;/p&gt;
&lt;p&gt;By the way, type &lt;code&gt;chrome://chrome-urls/&lt;/code&gt;, you can find more interesting stuff :D&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;This is a light weight tool built inside chrome, type&lt;/p&gt;
&lt;p&gt;&lt;code&gt;chrome://net-internals/#export&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;in the browser, you can f
    
    </summary>
    
    
  </entry>
  
</feed>
